#########################################
############COMMON ANGULAR
#########################################

#1.- install, bajar dependencias
	npm install
	
#2.- RUN
	npm start
	
#limpiar
	npm cache clean
	
#########################################
############INIT ANGULAR CLI
#########################################
#desistala (por seguridad)
npm uninstall -g angular-cli

#limpiar cache
npm cache clean

#instalar angular cli
sudo npm install -g @angular/cli@latest

#actualizar
ng update @angular/cli


#########################################
############START ANGULAR CLI
#########################################

##Crear Proyecto Angula CLi con ROUTING desde el inicio 
ng new [MY_PROJECT-ANG] --routing

## Agregar Directorios de Arquitectura: Model, Service, Shared, Material**, etc.

##Si se desea trabajar con ANGULAR MATERIAL
##Instalar las dependencias CDK (Save para sobre escribir dependencias)
npm install @angular/cdk --save

## Agregar config Angular Material  (Arreglar problemas de versiones, etc.)
ng add @angular/material

## Agregar Material Module como buena practica para centralizar componenetes Material
material/material.module.ts

## Agregar (Ejemplo) Navegador Material
ng generate @angular/material:material-nav --name [NAVEGATION_MAIN]

##Crear un nuevo componente en "pages"
ng g c pages/[COMPONENTE]--spec=false


##Crear  servicio en la carpeta "_service"
ng g s _service/[SERVICE]


## Arrancar Angular CLI
ng serve

#########################################
###########PASOS DE SET INICIAL TEMPLATE PRIMENG
#########################################

#0.- inicializar depndencias
npm install
ng serve

#1.- crear / copiar carpeta "_shared" para constantes necesarias

#2.- crear estructura del modulo (mode, service, view) en una carpeta llamada "modulo"

#3.- crear el model "seguridad-front/UserCredentials.ts"

#4.- agregar service "security" ,"guard" y "token-interceptor"  (Copiar contenido basico)

	ng g s modulo/service/seguridad-front/security

#5.- agregar componentes login y logout (fix dependencias)

#6.- Modificar el "app.module" para agregar en la seccion de "Providers" el bloque del Token Interceptor (Buscar y copiar contenido)

#7.- agregar componente  "BodyComponent" (Copiar Contenido desde el app.component) y agregarlo al app.module
#también agregar las funciones para el setting default del THEME; SCHEME; PROFILE MODE, etc


#8.- Cambiar el contenido del "app.component" por solo un "router" en el html y un inicio simple en su clase ts

#9.- Modificar cada componente app.*  que haga referencia al "app.component": Reemplazar AppComponent por BodyComponent

#10.- Cambiar Routing, agregando como primer nivel al "BodyComponent" , incluir el CAN activate

#11.- agregar imagen logo del login (Recurso)

#12.- agregar componente para el profileMain


#########################################
############MOBILE ANGULAR con APACHE CORDOVA
#########################################


#### PREPARACION ###

#1.-instalar cordova CLI

#2.- Proyecto basado en Abgula CLI

#3.- Instalar (O ya tener instalado) el SDK de la plataforma (Android, IOS; etc) e isntalar los Tools (Android): Forma práctica : Instalar Android Studio



#### ACCION ###
#1.- Crear un Proyecto Cordova: ej

cordova create hello com.example.hello HelloWorld

#2.- Agregar la plataforma que se desee  : [android o ios]

	cordova platform add [platform]

#3.-Copiar el Contenido del Cordova a la carpeta root del proyecyo Angular (Principal) , sin los "package.json" y "lock ..."
# estos se deberan conbinar cuidadosamente (Ver líneas similares, etc)


#4.- Probar la aplicación ejecutándola como lo usuarl
ng serve

#5.- Agregar plugin cordova :  

##5.1  En nuestro index.html agregar:
	<script type="text/javascript" src="cordova.js"></script>

##5.2  y luego el comando:

	cordova plugin add cordova-plugin-device


##5.3 y luego agregar a nuestro app component (para que se reconozca la variable 'device' se declara al inicio )

import { Component, OnInit } from '@angular/core';

declare var device;

@Component({
  selector: 'app-root',
  //selector: 'app-main',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent implements OnInit {
  
  constructor(){}

  ngOnInit(){

      document.addEventListener("deviceready", function() { 
        alert(device.platform); 
      }, false); 

  }
}

#6.-  probar nuevamente 


#7.-  Construir la aplicación

##7.1 en nuestro index.html  (para asegurar la lectura del contenido en un server)
<base href="/"> tag in your src/index.html to <base href="./">

##7.2 editar  "angular-cli.json/angular.json "   la ruta de guardado de la distribución compilada:
	por defecto "dist/[proyecto]"  a  "wwww"  . para esto buscamos la línea con "outputPath " (Angular >= 6)

##7.3 Ahora sí compilamos:
	ng build --prod

##7.4 Y finalmente construimos y corremos nuestro Proyecto Cordova:

	cordova build android|ios|[platform]


cordova build android

##7.5 Construir en modo release
cordova build --release

##8 FIRMA APP

##8.1  Generar Key Store para firmar app
keytool -genkey -v -keystore android.keystore -alias android-yimpu-app-key -keyalg RSA -keysize 2048 -validity 10000

##8.2  Construir en modo release y  Firmar tu app 
cordova build android --release -- --keystore=../[FILE_GENERADO].keystore --storePassword=[password_almacen] --alias=[MI_ALIAS] --password=[password_app]

apksigner sign --ks [FILE_GENERADO].keystore --out [PATH_FILE_SOURCE_MY_BUILT_APP].[apk|aab] [PATH_FILE_TARGET_MY_BUILT_APP].[apk|aab]

##8.3 Construir app APP ANDORID BUNDLE (Firmar previamente o revisar firma posterior)
cd platforms/android && gradlew.bat bundle

##INFO HELP

### General
https://www.androidcentral.com/installing-android-sdk-windows-mac-and-linux-tutorial
https://medium.com/@nacojohn/convert-your-angular-project-to-mobile-app-using-cordova-f0384a7711a6
https://medium.com/mindorks/upload-your-first-android-app-on-play-store-step-by-step-ee0de9123ac0

### Ayuda para firmar tu app cordova
https://codeburst.io/publish-a-cordova-generated-android-app-to-the-google-play-store-c7ae51cccdd5
https://cordova.apache.org/docs/en/latest/guide/platforms/android/#signing-an-app

