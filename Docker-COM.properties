#########.- Instalar DOCKER ###############

#1.- actualizar ...	
yum makecache fast
#2.- ultima version de DOCKER
yum install docker-ce
#3.- para un especific version (revisar antes)
yum list docker-ce.x86_64

#4.- comnezar el DOCKER
systemctl start docker

##########.- COMANDOS BÁSICOS ######

# Ver el listado de imágenes y container... se puede alternar con [OPTIONS]
docker image ls
docker container ls
docker ps

# crear imagen con DOCKER FILES ([-f]crear archivo docker file, [-t]  nombre de la imagen)
docker build -f dockerfile .
docker build -t <dockerfile> .

# Taggear imagenn
docker tag [IMG_ID] [IMG_TAG]

# Eliminar Imagenes
docker system prune
docker images purge

docker rmi $(docker images -a -q)


# Inspeccionar la info y config el container de id: ID_CONT
docker inspect <ID_CONT>

# seguir el log del container

docker logs [CONTAINER_ID or CONTAINER_NAME] --follow

#Ejecutar un container considerando los puertos expuestos
docker run -p <host_port1>:<container_port1> -p <host_port2>:<container_port2>

# Ejecutar un container (Considerado para un proyecto SPring boot : con un profile) , ejemplo depuertos
docker run -e"SPRING_PROFILES_ACTIVE=local" [IMAGE_ID]-d -p 8071:8071 

# Ejecutar un container con más variables de entorno, y con liberación para el HOST a internet
docker run -d -t -e PAR_ENVIORMENT="XXX" \
-e PAR_ENVIORMENT2="valor1" \
 <IMAGEN_ID>  \
--net=host -p 8082:8082

# Ejecutar un container con un volumen relacionado al Workdirectory del container
docker run -d -t -v "[PATH_EXISTE_O_NO_DIR_HOST]:[PATH_WORK_DIR_CONTAINER]" -w "[PATH_WORK_DIR_CONTAINER]"  <IMAGEN_ID>   -p 8082:8082

# Detener un Conteiner en ejecución de id: ID_CONT
docker container stop <ID_CONT>

# Borrar una imagen: (-f: para forzar)
docker rmi [-f] [ID_IMAGE]


#....
sudo yum remove docker-ce

###### PODER ACCEDER A INTERNET DESDE CONTENEDOR
##Buscar o crear File de config: /etc/default/docker   ... y agregar:

#Docker Upstart and SysVinit configuration file
#Use DOCKER_OPTS to modify the daemon startup options.
DOCKER_OPTS="--dns 208.67.222.222 --dns 208.67.220.220"


#########DOCKER HUB
## Login con el username ex:
docker login --username=[MY_HUB_USER_NAME]

## Taggear mi imagen
docker tag [IMAGE_ID] [MY_HUB_USER_NAME]/repository:my_tag

##subir (Push) mi imagen   (Tambien con el ID de la IMAGEN)
docker push [MY_HUB_USER_NAME]/repository:my_tag



#########DOCKER COMPOSE
#instalar ...
sudo curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
#Luego test
docker-compose --version

##desinstalar
pip uninstall docker-compose

#arrncar los contanedores con DC
docker-compose  up

#ver contenedores orquestados con DCPOMPOSE
docker-compose  ps

####IPTABLES AND FIREWALL  WITH DOCKER

#IPTABLES RULE : tratar
iptables -A INPUT -i docker0 -j ACCEPT
iptables -A FORWARD -i docker0 -o eth0 -j ACCEPT
iptables -A FORWARD -i eth0 -o docker0 -j ACCEPT
iptables -A INPUT -p tcp -m tcp --dport 7071 -s 0.0.0.0/0 -j ACCEPT

#FIREWALLD: tratar
firewall-cmd --permanent  --add-port=7071/tcp
firewall-cmd --permanent  --add-interface=docker0
firewall-cmd --permanent --zone=trusted --add-interface=docker0
firewall-cmd --reload

